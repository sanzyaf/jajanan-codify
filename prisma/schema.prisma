// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String           @id @default(uuid())
  username      String
  email         String        @unique
  password      String
  location      String?       
  about         String?
  avatar        String?
  qrisBarcode   String?

  services      Service[]
  offers        Offer[]       
  // testimonials  Testimonial[] @relation("UserTestimonials")
  // acceptedOffers AcceptedOffer[]
}

model Offer {
  id            String      @id @default(uuid())
  offerPrice    Float
  isAccepted        Boolean @default(false)

  serviceId    String
  service      Service     @relation(fields: [serviceId], references: [id])

  authorId     String
  author       User        @relation(fields: [authorId], references: [id])

}

model Service {
  id            String          @id @default(uuid())
  title         String
  slug          String       @unique
  description   String
  location      String
  price         Float
  isActive      Boolean
  image         String?

  authorId      String
  author        User         @relation(fields: [authorId], references: [id])

  offers        Offer[]      
  // serviceTestimonials Testimonial[] @relation("ServiceTestimonials")
}

// model AcceptedOffer {
//   id        String   @id @default(uuid())
//   createdAt DateTime @default(now())

//   userId    String
//   user      User    @relation(fields: [userId], references: [id])

//   offerId   String
//   offer     Offer    @relation(fields: [offerId], references: [id])
// }

// model Testimonial {
//   id          Int       @id @default(autoincrement())
//   rating      Int
//   description String

//   user        User      @relation(fields: [userId], references: [id])
//   userId      String
  
//   service     Service   @relation("ServiceTestimonials", fields: [serviceId], references: [id])
//   serviceId   String
// }


